import {RiddlesLevel} from '../common/common';
// import {BoardDelta} from '../go_game/gameLogic';
import {Board, IState, RiddleData} from './gameLogic';

function r(riddleData: RiddleData, board: Board, riddleWin: number[]): IState {
  return {
    board: board,
    riddleData: riddleData,
    // Go parameters:
    boardBeforeMove: board,
    passes: 2,
    deadBoard: null,
    posJustCapturedForKo: null,
    delta: null,
    riddleWin: riddleWin,
  };
}

export const riddleLevels: RiddlesLevel<IState>[] = [
  {
    levelLocalizeId: 'GO_LEVEL1',
    difficulty: 'EASY',
    maxMovesNum: 1,
    turnIndex: 0,
    riddles: [
      r(
        'r1',
        [
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', '', 'B', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
        ],
        [0, 4]
      ),
      r(
        'r2',
        [
          ['', '', '', '', 'B', '', '', '', ''],
          ['', '', '', 'B', 'W', '', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', '', 'B', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
        ],
        [1, 5]
      ),
      r(
        'r3',
        [
          ['', '', '', '', 'B', '', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', '', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', '', 'B', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
        ],
        [2, 5]
      ),
      r(
        'r4',
        [
          ['', '', '', '', 'B', '', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', '', '', '', ''],
          ['', '', '', '', 'B', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
        ],
        [3, 5]
      ),
      r(
        'r5',
        [
          ['', '', '', '', 'B', '', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
        ],
        [4, 4]
      ),
    ],
  },
  {
    levelLocalizeId: 'GO_LEVEL2',
    difficulty: 'EASY',
    maxMovesNum: 1,
    turnIndex: 0,
    riddles: [
      r(
        'r1',
        [
          ['', '', '', '', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', '', 'B', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
        ],
        [0, 3]
      ),
      r(
        'r2',
        [
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', '', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', '', 'B', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
        ],
        [1, 3]
      ),
      r(
        'r3',
        [
          ['W', 'W', 'B', '', '', '', '', '', ''],
          ['W', 'W', 'B', '', '', '', '', '', ''],
          ['', 'B', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
        ],
        [2, 0]
      ),
      r(
        'r4',
        [
          ['W', 'W', 'B', '', '', '', '', '', ''],
          ['W', 'W', 'B', '', '', '', '', '', ''],
          ['W', 'B', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
        ],
        [3, 0]
      ),
      r(
        'r5',
        [
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', 'B', 'W', 'W', 'W', 'B', '', ''],
          ['', 'B', 'W', 'W', 'W', 'W', 'W', 'B', ''],
          ['B', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'B'],
        ],
        [4, 4]
      ),
    ],
  },
  {
    levelLocalizeId: 'GO_LEVEL3',
    difficulty: 'EASY',
    maxMovesNum: 1,
    turnIndex: 0,
    riddles: [
      r(
        'r1',
        [
          ['', '', '', '', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', '', 'B', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
        ],
        [0, 3]
      ),
      r(
        'r2',
        [
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', '', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', '', 'B', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
        ],
        [1, 3]
      ),
      r(
        'r3',
        [
          ['W', 'W', 'B', '', '', '', '', '', ''],
          ['W', 'W', 'B', '', '', '', '', '', ''],
          ['', 'B', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
        ],
        [2, 0]
      ),
      r(
        'r4',
        [
          ['W', 'W', 'B', '', '', '', '', '', ''],
          ['W', 'W', 'B', '', '', '', '', '', ''],
          ['W', 'B', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
        ],
        [3, 0]
      ),
      r(
        'r5',
        [
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', 'B', 'W', 'W', 'W', 'B', '', ''],
          ['', 'B', 'W', 'W', 'W', 'W', 'W', 'B', ''],
          ['B', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'B'],
        ],
        [4, 4]
      ),
    ],
  },
  {
    levelLocalizeId: 'GO_LEVEL4',
    difficulty: 'EASY',
    maxMovesNum: 1,
    turnIndex: 0,
    riddles: [
      r(
        'r1',
        [
          ['', '', '', '', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', '', 'B', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
        ],
        [0, 3]
      ),
      r(
        'r2',
        [
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', '', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', '', '', 'B', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
        ],
        [1, 3]
      ),
      r(
        'r3',
        [
          ['W', 'W', 'B', '', '', '', '', '', ''],
          ['W', 'W', 'B', '', '', '', '', '', ''],
          ['', 'B', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
        ],
        [2, 0]
      ),
      r(
        'r4',
        [
          ['W', 'W', 'B', '', '', '', '', '', ''],
          ['W', 'W', 'B', '', '', '', '', '', ''],
          ['W', 'B', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
        ],
        [3, 0]
      ),
      r(
        'r5',
        [
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', '', '', '', '', '', ''],
          ['', '', '', 'B', 'W', 'B', '', '', ''],
          ['', '', 'B', 'W', 'W', 'W', 'B', '', ''],
          ['', 'B', 'W', 'W', 'W', 'W', 'W', 'B', ''],
          ['B', 'W', 'W', 'W', 'W', 'W', 'W', 'W', 'B'],
        ],
        [4, 4]
      ),
    ],
  },
];
